class Node:
    def __init__(self, value):
        self.value = value
        self.next = None


class LinkedList:   # singly linked list
    def __init__(self):
        self.head = None

    def add(self, node):

        newNode = Node(node)    # makes new Node object

        if self.head is None:   # adds he first node to the list
            self.head = newNode
            return

        else:
            temp = self.head
            while temp.next:    # goes through list until at end
                temp = temp.next
            temp.next = newNode

    def isPalindrome(self):
        temp = self.head
        arr = []
        while temp:     # setup arr to analyze
            arr.append(temp.value)
            temp = temp.next

        indexL = 0
        indexR = len(arr) - 1
        while indexL <= indexR:  # move through array from front and back
            if arr[indexL] != arr[indexR]:
                return False
            indexL += 1
            indexR -= 1
        return True

nodesToMake = input("What values do you want inside of the linked list? ").split()
llist = LinkedList()

for val in nodesToMake:  # fills the list
    llist.add(val)

print(llist.isPalindrome())
